# Top-level configuration template for CODEX pipeline
exp_id: experiment_name
# -----------------------------------------------------------------------------
# (A) Data Source and Basic Image Settings
# -----------------------------------------------------------------------------
data:
  # Path to the main .qptiff or .tiff file for the CODEX image
  file_name: path/to/image.ome.tiff

  # Path to the TSV file containing antibody definitions (one row per channel)
  antibodies_file: path/to/antibodies.tsv

  # Microns per pixel for this image; used in downstream calculations (e.g., segmentation scaling)
  image_mpp: 0.5

  # Whether to compute and save channel-level statistics (min, max, 95th percentile, etc.)
  generate_channel_stats: true

# -----------------------------------------------------------------------------
# (B) Channel Configuration
# -----------------------------------------------------------------------------
channels:
  # Name of the nuclear marker channel (must match an entry in the antibodies file)
  nuclear_channel: DAPI

  # Name(s) of the whole-cell marker channel(s). If multiple, they will be merged.
  wholecell_channel:
    - Pan-Cytokeratin
    - E-cadherin

# -----------------------------------------------------------------------------
# (C) Patching Parameters
# -----------------------------------------------------------------------------
patching:
  # Size (height, width) of each patch (in pixels)
  patch_height: 1024
  patch_width: 1024

  # Overlap fraction between adjacent patches (0.1 means 10% overlap)
  overlap: 0.1

# -----------------------------------------------------------------------------
# (D) Visualization Settings
# -----------------------------------------------------------------------------
visualization:
  # Whether to save an RGB visualization of the entire sample (e.g., nuclear vs. whole-cell)
  visualize_whole_sample: true

  # Downsampling factor for the whole sample visualization:
  # - null: No downsampling (default, but could be slow for large images)
  # - -1: Auto-calculate downsampling factor based on image size (recommended for large images)
  # - Any positive integer (e.g. 2, 4, 8): Downsample by this specific factor
  downsample_factor: -1

  # Whether to apply contrast enhancement using adaptive histogram equalization
  # true: Better visualization quality but slower processing
  # false: Faster processing but potentially less clear visualization 
  enhance_contrast: true

  # Whether to save RGB visualizations of all patches
  visualize_patches: false

  # Maximum number of worker threads for patch visualization (null = use all available)
  workers: 4

  # Whether to save the raw multi-channel patches to disk
  save_all_channel_patches: false

  # Whether to visualize and save the segmentation mask overlay (after segmentation)
  visualize_segmentation: false

# -----------------------------------------------------------------------------
# (E) QC (Patch-Level Quality Control)
# -----------------------------------------------------------------------------
patch_qc:
  # Minimum fraction of non-zero pixels required for a patch to be considered valid
  non_zero_perc_threshold: 0.05

  # Minimum mean intensity for the patch to be considered informative
  mean_intensity_threshold: 1.0

  # Minimum standard deviation required to avoid marking patches as too "flat"
  std_intensity_threshold: 1.0

# -----------------------------------------------------------------------------
# (F) Segmentation Parameters and Output Options
# -----------------------------------------------------------------------------
segmentation:
  # Path to the segmentation model directory (e.g., for DeepCell or another tool)
  model_path: /path/to/segmentation/model

  # If True, save segmentation masks as images
  save_segmentation_images: true

  # If True, pickle the entire codex_patches object (containing segmentation results, etc.)
  save_segmentation_pickle: true

# -----------------------------------------------------------------------------
# (G) Testing Data Disruption (Optional) 
#     If you do not want to disrupt your data, set "type" to null or remove this block.
# -----------------------------------------------------------------------------
testing:
  data_disruption:
    # Disruption type can be "downsampling" or "gaussian" or NULL
    type: NULL

    # Intensity level of disruption
    level: -1.0

    # Whether to save the disrupted patches to disk (for debugging/testing)
    save_disrupted_patches: false

# -----------------------------------------------------------------------------
# (H) Evaluation Metrics
# -----------------------------------------------------------------------------
evaluation:
  compute_metrics: false 