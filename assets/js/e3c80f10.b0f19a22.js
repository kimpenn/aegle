"use strict";(self.webpackChunkaegle_docs=self.webpackChunkaegle_docs||[]).push([[467],{4726:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ExperimentConfiguration/intro","title":"Introduction","description":"The experiment configuration system provides automated generation and management of configuration files for the PhenoCycler data analysis pipeline. This system enables researchers to efficiently manage multiple experiments through CSV-based design tables and YAML templates.","source":"@site/docs/ExperimentConfiguration/intro.md","sourceDirName":"ExperimentConfiguration","slug":"/ExperimentConfiguration/intro","permalink":"/aegle/docs/ExperimentConfiguration/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ExperimentConfiguration/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Experiment Configuration","permalink":"/aegle/docs/category/experiment-configuration"},"next":{"title":"Usage Guide","permalink":"/aegle/docs/ExperimentConfiguration/usage-guide"}}');var r=i(4848),s=i(8453);const o={sidebar_position:1},a="Introduction",c={},l=[{value:"Experiment Configuration Architecture",id:"experiment-configuration-architecture",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Directory Structure",id:"directory-structure",level:2},{value:"Workflow Overview",id:"workflow-overview",level:2},{value:"Pipeline Integration",id:"pipeline-integration",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,r.jsx)(n.p,{children:"The experiment configuration system provides automated generation and management of configuration files for the PhenoCycler data analysis pipeline. This system enables researchers to efficiently manage multiple experiments through CSV-based design tables and YAML templates."}),"\n",(0,r.jsx)(n.h2,{id:"experiment-configuration-architecture",children:"Experiment Configuration Architecture"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Aegle Experiment Configuration Pipeline",src:i(5115).A+"",width:"701",height:"311"})}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.p,{children:["The configuration generator (",(0,r.jsx)(n.code,{children:"config_generator.py"}),") provides:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Batch Configuration Generation"}),": Generate multiple experiment configurations from CSV experiment design tables and YAML templates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic Type Conversion"}),": Handle parameter conversion for different data types automatically"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nested Configuration Support"}),": Support multi-level configuration structures using ",(0,r.jsx)(n.code,{children:"::"})," separators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Batch Script Generation"}),": Generate experiment list strings for batch processing"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,r.jsxs)(n.p,{children:["The experiment configuration system is located in the ",(0,r.jsx)(n.code,{children:"exps/"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"exps/\n\u251c\u2500\u2500 README.md                    # Documentation\n\u251c\u2500\u2500 config_generator.py          # Main configuration generator script\n\u251c\u2500\u2500 config_generators/           # Specialized configuration generator modules\n\u2502   \u251c\u2500\u2500 config_generator_main.py\n\u2502   \u251c\u2500\u2500 config_generator_preprocess.py\n\u2502   \u2514\u2500\u2500 generator_utils.py\n\u251c\u2500\u2500 csvs/                        # Experiment design tables exported from Google Sheet\n\u2502   \u251c\u2500\u2500 main_ft.csv\n\u2502   \u251c\u2500\u2500 preprocess_ft.csv\n\u2502   \u251c\u2500\u2500 test_analysis.csv\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 configs/                     # Generated configuration files\n\u2502   \u251c\u2500\u2500 analysis/\n\u2502   \u251c\u2500\u2500 main/\n\u2502   \u2514\u2500\u2500 preprocess/\n\u251c\u2500\u2500 *_template.yaml              # Configuration template files\n\u2502   \u251c\u2500\u2500 main_template.yaml\n\u2502   \u251c\u2500\u2500 preprocess_template.yaml\n\u2502   \u2514\u2500\u2500 analysis_template.yaml\n\u2514\u2500\u2500 archive/                     # Historical configurations and experiments\n"})}),"\n",(0,r.jsx)(n.h2,{id:"workflow-overview",children:"Workflow Overview"}),"\n",(0,r.jsx)(n.p,{children:"The typical workflow for experiment configuration involves:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Design Experiments"}),": Create experiment designs in the ",(0,r.jsx)(n.a,{href:"https://docs.google.com/spreadsheets/d/1JcabHe3aobjeRa4V0mNSmC2rnh5jJ3h4_v0jnX2vkOE/edit?usp=sharing",children:"Google Sheet"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Export CSV"}),": Export the design table as CSV files to the ",(0,r.jsx)(n.code,{children:"csvs/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configure Generator"}),": Set the experiment parameters in ",(0,r.jsx)(n.code,{children:"config_generator.py"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Generate Configs"}),": Run the generator to create YAML configuration files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Run Pipeline"}),": Use the generated configurations with the Aegle pipeline"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pipeline-integration",children:"Pipeline Integration"}),"\n",(0,r.jsx)(n.p,{children:"The experiment configuration system integrates with three major components of the Aegle Pipeline:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Preprocessing"})," (",(0,r.jsx)(n.code,{children:"preprocess_X"}),"): Tissue extraction and basic image processing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Main Analysis"})," (",(0,r.jsx)(n.code,{children:"main_X"}),"): Image segmentation, patch extraction, and cell profiling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analysis"})," (",(0,r.jsx)(n.code,{children:"analysis_X"}),"): Downstream statistical analysis and visualization"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Each component has its own design table format and configuration template, ensuring proper parameter handling across the entire pipeline."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5115:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/aegle-exp_config.drawio-a3b2d5f2a527430e0ebfda3c43f78353.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);