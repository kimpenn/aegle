"use strict";(self.webpackChunkaegle_docs=self.webpackChunkaegle_docs||[]).push([[4900],{6043:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Setup/aegle_environment_setup","title":"Aegle Environment Setup","description":"Aegle is packaged and distributed as a Development container. This guide walks you through the process of setting up the development container for a user to perform analysis on multiplexed imaging data from PhenoCycler/CODEX platforms.","source":"@site/docs/Setup/aegle_environment_setup.md","sourceDirName":"Setup","slug":"/Setup/aegle_environment_setup","permalink":"/aegle/docs/Setup/aegle_environment_setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Setup/aegle_environment_setup.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Setup","permalink":"/aegle/docs/category/setup"},"next":{"title":"Experiment Configuration","permalink":"/aegle/docs/category/experiment-configuration"}}');var r=i(4848),s=i(8453);const t={sidebar_position:1},l="Aegle Environment Setup",d={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1) Create a working directory",id:"1-create-a-working-directory",level:2},{value:"2) Add Dev Container configuration",id:"2-add-dev-container-configuration",level:2},{value:"2a) Modify configuration for your machine",id:"2a-modify-configuration-for-your-machine",level:3},{value:"3) Add supporting pipeline folders",id:"3-add-supporting-pipeline-folders",level:2},{value:"4) Connect from your local machine with VS Code",id:"4-connect-from-your-local-machine-with-vs-code",level:2},{value:"5) Build and enter the Dev Container",id:"5-build-and-enter-the-dev-container",level:2},{value:"6) Clone the Aegle repository",id:"6-clone-the-aegle-repository",level:2},{value:"7) Add Bio-Formats tools (bftools)",id:"7-add-bio-formats-tools-bftools",level:2},{value:"8) Create the data folder structure",id:"8-create-the-data-folder-structure",level:2},{value:"9) Verify the environment",id:"9-verify-the-environment",level:2},{value:"Directory layout (after setup)",id:"directory-layout-after-setup",level:2},{value:"Notes &amp; Troubleshooting",id:"notes--troubleshooting",level:2},{value:"You\u2019re ready to run Aegle",id:"youre-ready-to-run-aegle",level:2}];function a(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"aegle-environment-setup",children:"Aegle Environment Setup"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Aegle"})," is packaged and distributed as a Development container. This guide walks you through the process of setting up the development container for a user to perform analysis on multiplexed imaging data from PhenoCycler/CODEX platforms."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A Linux workstation or VM where Aegle will run (with sufficient CPU/RAM; GPU optional depending on your workflow)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Docker"})," installed and running"]}),"\n",(0,r.jsxs)(n.li,{children:["(If using GPU) ",(0,r.jsx)(n.strong,{children:"NVIDIA drivers"})," and ",(0,r.jsx)(n.strong,{children:"NVIDIA Container Toolkit"})," installed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visual Studio Code"})," with the ",(0,r.jsx)(n.strong,{children:"Dev Containers"})," extension on your local machine to connect to the workstation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Git"})," installed and access to GitHub via ",(0,r.jsx)(n.strong,{children:"SSH"})]}),"\n",(0,r.jsxs)(n.li,{children:["Download ",(0,r.jsx)(n.code,{children:"Dockerfile"}),", ",(0,r.jsx)(n.code,{children:"devcontainer.json"}),", ",(0,r.jsx)(n.code,{children:"deepcell-pipeline"})," folder, and ",(0,r.jsx)(n.code,{children:"bftools"})," folder"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Example working directory used below: ",(0,r.jsx)(n.code,{children:"~/project/codex-analysis"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-create-a-working-directory",children:"1) Create a working directory"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/project/codex-analysis\n"})}),"\n",(0,r.jsx)(n.p,{children:"Within this directory you will keep your data, the dev container config, and pipeline repositories."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-add-dev-container-configuration",children:"2) Add Dev Container configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Create a folder named ",(0,r.jsx)(n.strong,{children:".devcontainer"})," inside the working directory and enter it:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/project/codex-analysis/.devcontainer\ncd ~/project/codex-analysis/.devcontainer\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Download and Copy the following two files into the ",(0,r.jsx)(n.code,{children:".devcontainer"})," folder:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Dockerfile"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"devcontainer.json"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tip:"})," If these live somewhere else on your machine or a repo, you can copy them here with ",(0,r.jsx)(n.code,{children:"cp"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2a-modify-configuration-for-your-machine",children:"2a) Modify configuration for your machine"}),"\n",(0,r.jsx)(n.p,{children:"Edit both files so paths and hardware options match your setup. Typical edits include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Base image and CUDA version (if using GPU)"}),"\n",(0,r.jsx)(n.li,{children:"System packages and Python versions"}),"\n",(0,r.jsx)(n.li,{children:"Mounts / volumes to expose the working directory"}),"\n",(0,r.jsx)(n.li,{children:"User/group IDs if needed for file permissions"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-add-supporting-pipeline-folders",children:"3) Add supporting pipeline folders"}),"\n",(0,r.jsxs)(n.p,{children:["From your source location, copy the ",(0,r.jsx)(n.code,{children:"deepcell-pipeline"})," folder into the working directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cp -r /path/to/deepcell-pipeline ~/project/codex-analysis/\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-connect-from-your-local-machine-with-vs-code",children:"4) Connect from your local machine with VS Code"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Open VS Code on your local machine."}),"\n",(0,r.jsx)(n.li,{children:"Remote into the target machine that will run Aegle (e.g., via SSH in VS Code or your preferred method)."}),"\n",(0,r.jsxs)(n.li,{children:["In VS Code, open the working directory with ",(0,r.jsx)(n.strong,{children:"Command+O"})," (macOS) and select ",(0,r.jsx)(n.code,{children:"~/project/codex-analysis"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tip:"})," If ",(0,r.jsx)(n.code,{children:"~/project/codex-analysis"})," does not exist in the workstation, go to step 1 and follow the guide."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-build-and-enter-the-dev-container",children:"5) Build and enter the Dev Container"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.strong,{children:"Command+Shift+P"})," (macOS) and run: ",(0,r.jsx)(n.strong,{children:"Dev Containers: Rebuild and Reopen in Container"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["VS Code will build the Docker image as specified in ",(0,r.jsx)(n.code,{children:"Dockerfile"})," and open the workspace inside the container."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-clone-the-aegle-repository",children:"6) Clone the Aegle repository"}),"\n",(0,r.jsx)(n.p,{children:'Inside the Dev Container (VS Code window says "Dev Container"), create a subfolder for the pipeline:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/project/codex-analysis/0-phenocycler-penntmc-pipeline\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then clone Aegle into that folder using VS Code:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Command+Shift+P"})," \u2192 type ",(0,r.jsx)(n.strong,{children:"Git: Clone"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Clone from GitHub"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Paste the Aegle repo URL (SSH):","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git@github.com:kimpenn/aegle.git\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Choose ",(0,r.jsx)(n.code,{children:"~/project/codex-analysis/0-phenocycler-penntmc-pipeline"})," as the destination."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"You can also clone from a terminal inside the container:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd ~/project/codex-analysis/0-phenocycler-penntmc-pipeline\ngit clone git@github.com:kimpenn/aegle.git .\n"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-add-bio-formats-tools-bftools",children:"7) Add Bio-Formats tools (bftools)"}),"\n",(0,r.jsxs)(n.p,{children:["Copy the ",(0,r.jsx)(n.code,{children:"bftools"})," folder into the ",(0,r.jsx)(n.strong,{children:"codex-analysis"})," dev container workspace:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cp -r /path/to/bftools ~/project/codex-analysis/\n"})}),"\n",(0,r.jsx)(n.p,{children:"Confirm the tools are executable (adjust path as needed):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"chmod +x ~/project/codex-analysis/bftools/*\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-create-the-data-folder-structure",children:"8) Create the data folder structure"}),"\n",(0,r.jsxs)(n.p,{children:["From a terminal ",(0,r.jsx)(n.strong,{children:"inside the Dev Container"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/project/codex-analysis/data/deepcell\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"9-verify-the-environment",children:"9) Verify the environment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The VS Code window title should indicate you are inside the ",(0,r.jsx)(n.strong,{children:"Dev Container"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docker ps"})," (outside the container) should show a running container for your workspace."]}),"\n",(0,r.jsx)(n.li,{children:"Inside the container, confirm key tools are available:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python --version\npip list\nwhich git\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"directory-layout-after-setup",children:"Directory layout (after setup)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"~/project/codex-analysis/\n\u251c\u2500\u2500 .devcontainer/\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 devcontainer.json\n\u251c\u2500\u2500 0-phenocycler-penntmc-pipeline/\n\u2502   \u2514\u2500\u2500 aegle/            # cloned repo contents\n\u251c\u2500\u2500 bftools/\n\u251c\u2500\u2500 deepcell-pipeline/\n\u2514\u2500\u2500 data/\n    \u2514\u2500\u2500 deepcell/\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"notes--troubleshooting",children:"Notes & Troubleshooting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Permissions:"})," If files created in the container appear owned by ",(0,r.jsx)(n.code,{children:"root"}),", set ",(0,r.jsx)(n.code,{children:"remoteUser"})," and/or ",(0,r.jsx)(n.code,{children:"containerUser"})," in ",(0,r.jsx)(n.code,{children:"devcontainer.json"})," and rebuild."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GPU access:"})," Ensure ",(0,r.jsx)(n.code,{children:"--gpus all"})," (or the Dev Containers equivalent) is configured in ",(0,r.jsx)(n.code,{children:"devcontainer.json"})," if required."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SSH keys:"})," If Git clone over SSH fails inside the container, share your SSH agent or copy your keys into the container securely."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rebuilds:"})," Any changes to ",(0,r.jsx)(n.code,{children:"Dockerfile"})," or ",(0,r.jsx)(n.code,{children:"devcontainer.json"})," require ",(0,r.jsx)(n.strong,{children:"Dev Containers: Rebuild and Reopen in Container"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"youre-ready-to-run-aegle",children:"You\u2019re ready to run Aegle"}),"\n",(0,r.jsx)(n.p,{children:"At this point, the Docker-based development environment is set up and the Aegle repository is cloned inside the container. Proceed with your usual Aegle workflow or pipeline commands within this environment."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var o=i(6540);const r={},s=o.createContext(r);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);