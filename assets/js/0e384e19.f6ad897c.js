"use strict";(self.webpackChunkaegle_docs=self.webpackChunkaegle_docs||[]).push([[976],{5115:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/aegle-exp_config.drawio-a3b2d5f2a527430e0ebfda3c43f78353.png"},6299:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/aegle-preprocess.drawio-7ab12fe1ec6cefae9f149ba100caf61e.png"},6346:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/aegle-overview.drawio-232bdca2bc3ac5aa52cb1571eb263687.png"},7879:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"intro","title":"Overview","description":"Aegle is a comprehensive pipeline for analyzing multiplex imaging data from PhenoCycler/CODEX platforms, providing end-to-end processing from raw images to single-cell insights.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/aegle/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Setup","permalink":"/aegle/docs/category/setup"}}');var t=i(4848),r=i(8453);const a={sidebar_position:1},l="Overview",o={},c=[{value:"Pipeline Architecture",id:"pipeline-architecture",level:2},{value:"Experiment Configuration",id:"experiment-configuration",level:2},{value:"Data Preprocessing",id:"data-preprocessing",level:2},{value:"Main Processing",id:"main-processing",level:2},{value:"Single-cell Analysis",id:"single-cell-analysis",level:2},{value:"Post-Analysis Visualization",id:"post-analysis-visualization",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,t.jsx)(n.p,{children:"Aegle is a comprehensive pipeline for analyzing multiplex imaging data from PhenoCycler/CODEX platforms, providing end-to-end processing from raw images to single-cell insights."}),"\n",(0,t.jsx)(n.h2,{id:"pipeline-architecture",children:"Pipeline Architecture"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Aegle Main Pipeline",src:i(6346).A+"",width:"1061",height:"691"})}),"\n",(0,t.jsx)(n.p,{children:"For detailed documentation, see the specific sections in the sidebar."}),"\n",(0,t.jsx)(n.h2,{id:"experiment-configuration",children:"Experiment Configuration"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Aegle Experiment Configuration Pipeline",src:i(5115).A+"",width:"701",height:"311"})}),"\n",(0,t.jsx)(n.p,{children:"The configuration system automates experiment setup through:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CSV Design Tables"}),": Define experiments in Google Sheets and export to CSV"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"YAML Templates"}),": Standardized parameter templates for reproducibility"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batch Generation"}),": Generate configurations for multiple experiments simultaneously"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validation"}),": Automatic type conversion and parameter validation"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Quick Start:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd exps/\npython config_generator.py\n"})}),"\n",(0,t.jsx)(n.h2,{id:"data-preprocessing",children:"Data Preprocessing"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Aegle Preprocessing Pipeline",src:i(6299).A+"",width:"651",height:"421"})}),"\n",(0,t.jsx)(n.p,{children:"Preprocessing transforms raw QPTIFF files into analysis-ready data:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Tissue Extraction"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Manual annotation (recommended): Interactive napari-based tool"}),"\n",(0,t.jsx)(n.li,{children:"Automatic detection: Computer vision-based tissue identification"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. Antibody Metadata"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Extracts channel-to-antibody mappings from QPTIFF metadata"}),"\n",(0,t.jsx)(n.li,{children:"Generates standardized TSV files for downstream analysis"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Execution:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./run_preprocess_ft.sh\n"})}),"\n",(0,t.jsx)(n.h2,{id:"main-processing",children:"Main Processing"}),"\n",(0,t.jsx)(n.h2,{id:"single-cell-analysis",children:"Single-cell Analysis"}),"\n",(0,t.jsx)(n.h2,{id:"post-analysis-visualization",children:"Post-Analysis Visualization"})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);