"use strict";(self.webpackChunkaegle_docs=self.webpackChunkaegle_docs||[]).push([[520],{7727:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Main/Overview","title":"Overview","description":"Last updated: December 2024","source":"@site/docs/Main/Overview.md","sourceDirName":"Main","slug":"/Main/Overview","permalink":"/aegle/docs/Main/Overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Main/Overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Main Processing","permalink":"/aegle/docs/category/main-processing"},"next":{"title":"Execution Guide","permalink":"/aegle/docs/Main/Execution"}}');var t=i(4848),r=i(8453);const l={sidebar_position:1},a="Overview",o={},c=[{value:"Pipeline Architecture",id:"pipeline-architecture",level:2},{value:"Workflow Integration",id:"workflow-integration",level:2},{value:"Core Functionality",id:"core-functionality",level:2},{value:"1. Image Processing &amp; Patching",id:"1-image-processing--patching",level:3},{value:"2. Cell Segmentation",id:"2-cell-segmentation",level:3},{value:"3. Single-Cell Profiling",id:"3-single-cell-profiling",level:3},{value:"4. Comprehensive Analysis",id:"4-comprehensive-analysis",level:3},{value:"Key Features",id:"key-features",level:2},{value:"Scalability &amp; Performance",id:"scalability--performance",level:3},{value:"Quality Control",id:"quality-control",level:3},{value:"Flexibility &amp; Customization",id:"flexibility--customization",level:3},{value:"Main Entry Points",id:"main-entry-points",level:2},{value:"1. Individual Experiment Execution",id:"1-individual-experiment-execution",level:3},{value:"2. Batch Processing",id:"2-batch-processing",level:3},{value:"3. Analysis Pipeline",id:"3-analysis-pipeline",level:3},{value:"Configuration Integration",id:"configuration-integration",level:2},{value:"Output Structure",id:"output-structure",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Memory Management",id:"memory-management",level:3},{value:"Processing Speed",id:"processing-speed",level:3},{value:"Storage Requirements",id:"storage-requirements",level:3},{value:"Integration with Other Modules",id:"integration-with-other-modules",level:2},{value:"Upstream Integration (DataPreprocess)",id:"upstream-integration-datapreprocess",level:3},{value:"Downstream Integration (Analysis)",id:"downstream-integration-analysis",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Last updated: December 2024"})}),"\n",(0,t.jsx)(n.p,{children:"The Main pipeline module represents the core analytical engine of the Aegle system, responsible for transforming preprocessed multiplex imaging data into quantified single-cell profiles and comprehensive tissue analysis results."}),"\n",(0,t.jsx)(n.h2,{id:"pipeline-architecture",children:"Pipeline Architecture"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Pipeline architecture diagram will be added here"})}),"\n",(0,t.jsx)(n.h2,{id:"workflow-integration",children:"Workflow Integration"}),"\n",(0,t.jsx)(n.p,{children:"The Main pipeline operates as the central component in a three-stage analytical workflow:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'graph LR\n    A[Data Preprocessing] --\x3e B[Main Analysis Pipeline]\n    B --\x3e C[Downstream Analysis]\n    \n    subgraph "Data Preprocessing"\n        A1[Tissue Extraction]\n        A2[Antibody Metadata]\n    end\n    \n    subgraph "Main Analysis Pipeline" \n        B1[Image Loading & Patching]\n        B2[Cell Segmentation]\n        B3[Feature Extraction]\n        B4[Cell Profiling]\n        B5[Quality Assessment]\n    end\n    \n    subgraph "Downstream Analysis"\n        C1[Statistical Analysis]\n        C2[Visualization]\n        C3[Clustering & Phenotyping]\n    end\n'})}),"\n",(0,t.jsx)(n.h2,{id:"core-functionality",children:"Core Functionality"}),"\n",(0,t.jsx)(n.h3,{id:"1-image-processing--patching",children:"1. Image Processing & Patching"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Full Image Processing"}),": Loads and processes complete CODEX/PhenoCycler images"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Intelligent Patching"}),": Divides images into overlapping patches for scalable analysis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Channel Extraction"}),": Selects biologically relevant channels (membrane, nucleus markers)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Quality Filtering"}),": Identifies and filters empty or noisy patches"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-cell-segmentation",children:"2. Cell Segmentation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-channel Segmentation"}),": Simultaneous nucleus and cell boundary detection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advanced Algorithms"}),": Integration of state-of-the-art segmentation methods"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cell-Nucleus Matching"}),": Sophisticated algorithms to match cells with their nuclei"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mask Repair"}),": Post-processing to improve segmentation quality"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-single-cell-profiling",children:"3. Single-Cell Profiling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Intensity Quantification"}),": Measures marker expression levels per cell"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Morphological Analysis"}),": Extracts cell shape and size characteristics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Spatial Context"}),": Records cell positions and neighborhood relationships"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Quality Metrics"}),": Calculates reliability scores for each measurement"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-comprehensive-analysis",children:"4. Comprehensive Analysis"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Segmentation Evaluation"}),": Detailed assessment of segmentation quality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Intensity Distribution Analysis"}),": Statistical characterization of marker expression"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Spatial Density Metrics"}),": Quantification of cell distribution patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batch Processing"}),": Efficient handling of multiple experiments"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsx)(n.h3,{id:"scalability--performance",children:"Scalability & Performance"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Patch-based Processing"}),": Handles large images by processing manageable patches"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parallel Execution"}),": Multi-core processing for improved performance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory Management"}),": Efficient memory usage for large datasets"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batch Processing"}),": Automated processing of multiple experiments"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"quality-control",children:"Quality Control"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated QC"}),": Built-in quality assessment at multiple stages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Visualization Tools"}),": Comprehensive visualization of results and intermediate steps"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logging & Monitoring"}),": Detailed logging for debugging and performance tracking"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reproducibility"}),": Complete parameter tracking and result versioning"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"flexibility--customization",children:"Flexibility & Customization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configurable Parameters"}),": Extensive configuration system for different use cases"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Modular Design"}),": Individual components can be run independently"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multiple Output Formats"}),": Results available in various formats (CSV, pickle, images)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integration Ready"}),": Designed to work seamlessly with upstream and downstream modules"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"main-entry-points",children:"Main Entry Points"}),"\n",(0,t.jsx)(n.p,{children:"The Main pipeline can be executed through several entry points:"}),"\n",(0,t.jsx)(n.h3,{id:"1-individual-experiment-execution",children:"1. Individual Experiment Execution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run single experiment\npython src/main.py \\\n  --data_dir /path/to/data \\\n  --config_file /path/to/config.yaml \\\n  --out_dir /path/to/output \\\n  --log_level INFO\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-batch-processing",children:"2. Batch Processing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Process multiple experiments\n./run_main_ft.sh\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-analysis-pipeline",children:"3. Analysis Pipeline"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run downstream analysis\n./run_analysis_ft.sh\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-integration",children:"Configuration Integration"}),"\n",(0,t.jsxs)(n.p,{children:["The Main pipeline integrates seamlessly with the ",(0,t.jsx)(n.a,{href:"/aegle/docs/ExperimentConfiguration/intro",children:"Experiment Configuration"})," system:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Template-based Configuration"}),": Uses ",(0,t.jsx)(n.code,{children:"main_template.yaml"})," for consistent parameter management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CSV-driven Experiments"}),": Experiment designs from Google Sheets drive batch processing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated Config Generation"}),": Configurations generated automatically from design tables"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameter Validation"}),": Built-in validation ensures configuration consistency"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"output-structure",children:"Output Structure"}),"\n",(0,t.jsx)(n.p,{children:"The pipeline generates comprehensive outputs organized in a structured format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"output_directory/\n\u251c\u2500\u2500 cell_profiling/              # Single-cell data\n\u2502   \u251c\u2500\u2500 patch-0-cell_by_marker.csv\n\u2502   \u2514\u2500\u2500 patch-0-cell_metadata.csv\n\u251c\u2500\u2500 extracted_channel_patches.npy   # Processed image patches\n\u251c\u2500\u2500 original_seg_res_batch.pickle   # Raw segmentation results\n\u251c\u2500\u2500 matched_seg_res_batch.pickle    # Processed segmentation results\n\u251c\u2500\u2500 patches_metadata.csv            # Patch-level metadata\n\u251c\u2500\u2500 channel_stats.csv              # Channel statistics\n\u2514\u2500\u2500 copied_config.yaml             # Configuration record\n"})}),"\n",(0,t.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Patch Size Optimization"}),": Balance between processing efficiency and memory usage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Channel Selection"}),": Process only necessary channels to reduce memory footprint"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batch Size Control"}),": Configurable batch sizes for different hardware configurations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"processing-speed",children:"Processing Speed"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parallel Processing"}),": Multi-core utilization for CPU-intensive operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Efficient Algorithms"}),": Optimized implementations for segmentation and feature extraction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Smart Caching"}),": Intermediate result caching to avoid redundant computations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"storage-requirements",children:"Storage Requirements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Compressed Outputs"}),": Efficient storage formats to minimize disk usage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Selective Output"}),": Configurable output generation to save only necessary results"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cleanup Options"}),": Automatic cleanup of intermediate files"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-other-modules",children:"Integration with Other Modules"}),"\n",(0,t.jsx)(n.h3,{id:"upstream-integration-datapreprocess",children:"Upstream Integration (DataPreprocess)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Seamlessly processes outputs from the ",(0,t.jsx)(n.a,{href:"/aegle/docs/DataPreprocess/Overview",children:"Data Preprocessing"})," module"]}),"\n",(0,t.jsx)(n.li,{children:"Automatically locates preprocessed tissue regions and antibody metadata"}),"\n",(0,t.jsx)(n.li,{children:"Validates input data quality and format compatibility"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"downstream-integration-analysis",children:"Downstream Integration (Analysis)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Outputs formatted for immediate use by downstream analysis modules"}),"\n",(0,t.jsx)(n.li,{children:"Standardized file formats ensure compatibility"}),"\n",(0,t.jsx)(n.li,{children:"Metadata preservation enables full traceability"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"To get started with the Main pipeline:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review Configuration"}),": Understand the ",(0,t.jsx)(n.a,{href:"/aegle/docs/Main/Configuration",children:"configuration parameters"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Check Prerequisites"}),": Ensure ",(0,t.jsx)(n.a,{href:"/aegle/docs/DataPreprocess/Overview",children:"Data Preprocessing"})," is complete"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run Pipeline"}),": Follow the ",(0,t.jsx)(n.a,{href:"/aegle/docs/Main/Execution",children:"execution guide"})," for your use case"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Analyze Results"}),": Examine ",(0,t.jsx)(n.a,{href:"/aegle/docs/Main/Outputs",children:"outputs"})," and proceed to downstream analysis"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For detailed information about specific components, see:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/aegle/docs/Main/Preprocess",children:"Preprocessing Details"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/aegle/docs/Main/SegmentationAnalysis",children:"Segmentation Analysis"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/aegle/docs/Main/Configuration",children:"Configuration Reference"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/aegle/docs/Main/Execution",children:"Execution Guide"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/aegle/docs/Main/Troubleshooting",children:"Troubleshooting"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);