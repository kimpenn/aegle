"use strict";(self.webpackChunkaegle_docs=self.webpackChunkaegle_docs||[]).push([[976],{6299:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/aegle-preprocess.drawio-7ab12fe1ec6cefae9f149ba100caf61e.png"},6346:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/aegle-overview.drawio-232bdca2bc3ac5aa52cb1571eb263687.png"},7879:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"intro","title":"Overview","description":"Aegle Main Pipeline","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/aegle/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Experiment Configuration","permalink":"/aegle/docs/category/experiment-configuration"}}');var t=i(4848),a=i(8453);const r={sidebar_position:1},o="Overview",l={},c=[{value:"Data Preprocess",id:"data-preprocess",level:2},{value:"Main",id:"main",level:2},{value:"Preprocess",id:"preprocess",level:3},{value:"Segmentation",id:"segmentation",level:3},{value:"Cell Profiling",id:"cell-profiling",level:3},{value:"Analysis",id:"analysis",level:2},{value:"Experiment Configuration",id:"experiment-configuration",level:2},{value:"Post-Analysis Visualization",id:"post-analysis-visualization",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Aegle Main Pipeline",src:i(6346).A+"",width:"1061",height:"691"})}),"\n",(0,t.jsx)(n.h2,{id:"data-preprocess",children:"Data Preprocess"}),"\n",(0,t.jsx)(n.p,{children:"This module handles the essential preprocessing steps for multiplex imaging data (PhenoCycler/CODEX) before downstream analysis."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Aegle Preprocessing Pipeline",src:i(6299).A+"",width:"651",height:"421"})}),"\n",(0,t.jsx)(n.h2,{id:"main",children:"Main"}),"\n",(0,t.jsx)(n.h3,{id:"preprocess",children:"Preprocess"}),"\n",(0,t.jsx)(n.h3,{id:"segmentation",children:"Segmentation"}),"\n",(0,t.jsx)(n.h3,{id:"cell-profiling",children:"Cell Profiling"}),"\n",(0,t.jsx)(n.h2,{id:"analysis",children:"Analysis"}),"\n",(0,t.jsx)(n.h2,{id:"experiment-configuration",children:"Experiment Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The Aegle pipeline includes a comprehensive experiment configuration system that enables researchers to efficiently manage multiple experiments through automated configuration generation. This system uses CSV-based design tables and YAML templates to generate consistent, reproducible experiment configurations across the entire pipeline."}),"\n",(0,t.jsx)(n.p,{children:"Key features include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Batch configuration generation from design tables"}),"\n",(0,t.jsx)(n.li,{children:"Automatic parameter type conversion and validation"}),"\n",(0,t.jsx)(n.li,{children:"Support for nested configuration structures"}),"\n",(0,t.jsx)(n.li,{children:"Integration with all pipeline components (preprocessing, main analysis, and downstream analysis)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"post-analysis-visualization",children:"Post-Analysis Visualization"}),"\n",(0,t.jsx)(n.p,{children:"Launch napari to interactively check mask the segmentation channels."})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);